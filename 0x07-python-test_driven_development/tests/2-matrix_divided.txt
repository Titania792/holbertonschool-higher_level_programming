============================================
            Test 1 - div matrix
============================================

"""This test works for the function matrix_divided,
to bring that function the first thing we need
to do is import 2-matrix_divided"""
 
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

case 1:

>>> matrix_divided([[2, 4, 6],[8, 10, 12]], 2)
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

case 2:

>>> matrix_divided([[2, 4, 6],[8, 10, 12]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided([[2, 4, 6],[8, 10, 12]], "no")
Traceback (most recent call last):
TypeError: div must be a number

case 3:

>>> matrix_divided([(2, 4, 6),[8, 10, 12]], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

case 4:

>>> matrix_divided([[2, 4, 6],[8, 10]], 2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

case 5:

>>> matrix_divided(([2, 4, 6],[8, 10, 12]), 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

case 6:

>>> matrix_divided([[a, 4, 6],[8, 10, 12]], 2)
Traceback (most recent call last):
NameError: name 'a' is not defined

case 7:

>>> matrix_divided([["Tati", 4, 6],[8, 10, 12]], 2)
Traceback (most recent call last):
TypeError: unsupported operand type(s) for /: 'str' and 'int'

case 8:

>>> matrix_divided([[2, 4, 6],[8, 10, 12]], None)
Traceback (most recent call last):
TypeError: div must be a number

case 9:

>>> matrix_divided(None, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats